# This template will build and test your projects
# * Caches downloaded dependencies and plugins between invocation.
# * Verify but don't deploy merge requests.
# * Deploy built artifacts from master branch only.

stages:
  # - lint
  # - test
  - deploy

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
# cache:
#   paths:
#     - node_modules

# For merge requests do not `deploy` but only run `verify`.
# See https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
# lint:
#   stage: lint
#   script:
#     - yarn install
#     - yarn lint

# test:
#   stage: test
#   script:
#     - npm run test

# To deploy packages from CI, create a ci_settings.xml file
# For `master` branch run `mvn deploy` automatically.
deploy:
  only:
    - master
  stage: deploy
  before_script:
    - 'which ssh-agent || (sudo apt-get update -y && sudo apt-get install -y openssh-client)'
    - eval $(ssh-agent -s)
    - ssh-add <(echo $GIT_SSH_PRIV_KEY | base64 -d)
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - ssh $DEPLOYMENT_HOST "cd ~/isec-frontend && git fetch origin master && git reset --hard origin/master && docker-compose down && docker-compose up --build -d && docker system prune --volumes --force"
